// todo: get directly from openMINDS schema
export const studyTargetTerms = [
    "GeneticStrainType",
    "Disease",
    "Species",
    "SubcellularEntity",
    "Handedness",
    "Organ",
    "UBERONParcellation",
    "CellType",
    "BiologicalSex",
    "MolecularEntity",
    "BiologicalOrder",
    "BreedingType",
    "DiseaseModel",
    "CellCultureType" ];

export const keywordSet = [
        "ActionStatusType",
        "AgeCategory",
        "AnalysisTechnique",
        "AnatomicalAxesOrientation",
        "AnatomicalIdentificationType",
        "AnatomicalPlane",
        "AnnotationCriteriaType",
        "AnnotationType",
        "AtlasType",
        "AuditoryStimulusType",
        "BiologicalOrder",
        "BiologicalProcess",
        "BiologicalSex",
        "BreedingType",
        "CellCultureType",
        "CellType",
        "ChemicalMixtureType",
        "Colormap",
        "ContributionType",
        "CranialWindowConstructionType",
        "CranialWindowReinforcementType",
        "CriteriaQualityType",
        "DataType",
        "DeviceType",
        "DifferenceMeasure",
        "Disease",
        "DiseaseModel",
        "EducationalLevel",
        "ElectricalStimulusType",
        "EthicsAssessment",
        "ExperimentalApproach",
        "FileBundleGrouping",
        "FileRepositoryType",
        "FileUsageRole",
        "GeneticStrainType",
        "GustatoryStimulusType",
        "Handedness",
        "Language",
        "Laterality",
        "LearningResourceType",
        "MeasuredQuantity",
        "MeasuredSignalType",
        "MetaDataModelType",
        "ModelAbstractionLevel",
        "ModelScope",
        "MolecularEntity",
        "OlfactoryStimulusType",
        "OperatingDevice",
        "OperatingSystem",
        "OpticalStimulusType",
        "Organ",
        "OrganismSubstance",
        "OrganismSystem",
        "PatchClampVariation",
        "PreparationType",
        "ProductAccessibility",
        "ProgrammingLanguage",
        "QualitativeOverlap",
        "SemanticDataType",
        "Service",
        "SetupType",
        "SoftwareApplicationCategory",
        "SoftwareFeature",
        "Species",
        "StimulationApproach",
        "StimulationTechnique",
        "SubcellularEntity",
        "SubjectAttribute",
        "TactileStimulusType",
        "Technique",
        "TermSuggestion",
        "Terminology",
        "TissueSampleAttribute",
        "TissueSampleType",
        "TypeOfUncertainty",
        "UBERONParcellation",
        "UnitOfMeasurement",
        "VisualStimulusType"
      ]


    //  Instances that are part of SANDS, but not trivial to add to the form 
    // "ParcellationEntity",
    // "ParcellationEntityVersion",
    // "CustomAnatomicalEntity",

export const subjectProperties = [
  "BiologicalSex",
  "AgeCategory",
  "Species",
  "Handedness",
  //"Technique",
  "Laterality",
  "TissueSampleType"
]